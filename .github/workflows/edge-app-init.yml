name: Initialize Edge App

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for initialization (stage or production)'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - production

      edge_app_name:
        description: 'Folder name of the edge app (under edge-apps/) to initialize'
        required: true
        default: ''

      edge_app_title:
        description: 'Display title of the edge app (used in instance.yml)'
        required: true
        default: ''

jobs:
  deploy:
    name: Initializing ${{ inputs.edge_app_name }} in ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      APP_PATH: edge-apps/${{ inputs.edge_app_name }}
      MANIFEST_FILE_NAME: ${{ inputs.environment == 'production' && 'screenly.yml' || 'screenly_qc.yml' }}
      SCREENLY_API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
      API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
      API_BASE_URL: ${{ inputs.environment == 'stage' && 'https://api.screenlyappstage.com/' || 'https://api.screenlyapp.com/' }}

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: master

      - name: ⚙️ Install CLI Binary
        run: |
          wget -q -O screenly-cli.tar.gz https://github.com/Screenly/cli/releases/download/v1.0.3/screenly-cli-x86_64-unknown-linux-gnu.tar.gz
          tar -xf screenly-cli.tar.gz
          sudo mv screenly /usr/local/bin/screenly
          screenly --version

      - name: 📦 Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: 🛠 Create Edge App
        run: |
          echo "📦 Creating app in: $APP_PATH"
          APP_ID=$(screenly edge-app create --name="${{ inputs.edge_app_name }}" --in-place --path="$APP_PATH" | tee /dev/stderr | grep -oP 'id: \K\S+')

          if [ -z "$APP_ID" ]; then
            echo "❌ App ID not found in CLI output"
            exit 1
          fi

          echo "✅ App created with ID: $APP_ID"
          echo "APP_ID=$APP_ID" >> $GITHUB_ENV

      - name: ✍️ Inject App ID into Manifest
        run: |
          echo "Injecting into: $MANIFEST_FILE_NAME"
          yq -i ".id = \"$APP_ID\"" "$APP_PATH/$MANIFEST_FILE_NAME"

      - name: 🚀 Deploy Edge App
        run: |
          screenly edge-app deploy --path="$APP_PATH"

      - name: 📄 Create Edge App Instance
        run: |
          screenly edge-app instance create --path="$APP_PATH"

      - name: ✏️ Update Instance Name
        run: |
          sed -i "s/^name: .*/name: ${{ inputs.edge_app_title }}/" "$APP_PATH/instance.yml"

      - name: 🔁 Update Edge App Instance
        run: |
          screenly edge-app instance update --path="$APP_PATH"

      - name: 📤 Upload Edge App Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: edge-app-files
          path: |
            ${{ env.APP_PATH }}/instance.yml
            ${{ env.APP_PATH }}/${{ env.MANIFEST_FILE_NAME }}
