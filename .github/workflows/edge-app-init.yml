name: Initialize Edge App

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for initialization (stage or production)'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - production

      edge_app_name:
        description: 'Folder name of the edge app (under edge-apps/) to initialize'
        required: true
        default: ''

      edge_app_title:
        description: 'Display title of the edge app (used in instance.yml)'
        required: true
        default: ''

jobs:
  deploy:
    name: Initializing ${{ inputs.edge_app_name }} in ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      APP_PATH: edge-apps/${{ inputs.edge_app_name }}
      MANIFEST_FILE_NAME: ${{ inputs.environment == 'production' && 'screenly.yml' || 'screenly_qc.yml' }}
      SCREENLY_API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
      API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
      API_BASE_URL: ${{ inputs.environment == 'stage' && 'https://api.screenlyappstage.com/' || 'https://api.screenlyapp.com/' }}

    steps:
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Install yq
        uses: mikefarah/yq@v4

      - name: Download Screenly CLI
        run: |
          wget -q -O screenly-cli.tar.gz https://github.com/Screenly/cli/releases/download/v1.0.3/screenly-cli-x86_64-unknown-linux-gnu.tar.gz
          tar xfz screenly-cli.tar.gz
          chmod +x screenly
          mv screenly /usr/local/bin/screenly

      - name: Create Edge App and extract ID
        id: create_app
        run: |
          echo "üì¶ Creating app in: $APP_PATH"
          APP_ID=$(screenly edge-app create --name=${{ inputs.edge_app_name }} --in-place --path=$APP_PATH | tee /dev/stderr | grep -oP 'id: \K\S+')
          echo "APP_ID=$APP_ID" >> $GITHUB_ENV
          echo "‚úÖ Created app with ID: $APP_ID"

      - name: Insert App ID into manifest
        run: |
          echo "üìù Inserting app ID $APP_ID into manifest file"
          yq eval ".id = \"$APP_ID\"" -i "${APP_PATH}/${MANIFEST_FILE_NAME}"

      - name: Deploy Edge App
        run: |
          screenly edge-app deploy --path=$APP_PATH

      - name: Create Edge App Instance
        run: |
          screenly edge-app instance create --path=$APP_PATH

      - name: Correct the instance name
        run: |
          sed -i "s/^name: .*/name: ${{ inputs.edge_app_title }}/" "$APP_PATH/instance.yml"

      - name: Update Edge App Instance
        run: |
          screenly edge-app instance update --path=$APP_PATH

      - name: Print Edge App ID from manifest
        run: |
          MANIFEST_FILE="${APP_PATH}/${MANIFEST_FILE_NAME}"
          echo "üìÑ Reading App ID from: $MANIFEST_FILE"
          APP_ID=$(yq '.id' "$MANIFEST_FILE")

          if [ -z "$APP_ID" ]; then
            echo "‚ùå App ID not found in manifest!"
            exit 1
          fi

          echo "‚úÖ Edge App ID: $APP_ID"

      - name: Upload Edge App artifacts
        uses: actions/upload-artifact@v4
        with:
          name: edge-app-files
          path: |
            ${{ env.APP_PATH }}/instance.yml
            ${{ env.APP_PATH }}/${{ env.MANIFEST_FILE_NAME }}
