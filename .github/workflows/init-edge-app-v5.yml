name: Initialize Edge App v5

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (stage or production)'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - production

      edge_app_name:
        description: 'Folder name of the edge app (under edge-apps/)'
        required: true

      edge_app_title:
        description: 'Display title of the edge app (used in instance.yml)'
        required: true

      app_type:
        description: 'Type of the Edge App (html or react)'
        required: true
        default: 'html'
        type: choice
        options:
          - html
          - react

run-name: "${{ inputs.app_type == 'react' && 'React' || 'HTML' }} Edge App ${{ inputs.edge_app_name }} to ${{ inputs.environment }}"

jobs:
  deploy:
    name: Deploying ${{ inputs.edge_app_name }} to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      APP_PATH: edge-apps/${{ inputs.edge_app_name }}
      MANIFEST_FILE_NAME: ${{ inputs.environment == 'stage' && 'screenly_qc.yml' || 'screenly.yml' }}
      SCREENLY_API_TOKEN: ${{ secrets.SCREENLY_API_TOKEN }}
      API_BASE_URL: ${{ inputs.environment == 'stage' && 'https://api.screenlyappstage.com/' || 'https://api.screenlyapp.com/' }}

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: master

      - name: 🛠 Set up Node.js (React only)
        if: ${{ inputs.app_type == 'react' }}
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: 📦 Install Dependencies (React only)
        if: ${{ inputs.app_type == 'react' }}
        working-directory: edge-apps/${{ inputs.edge_app_name }}
        run: |
          npm install

      - name: 🛠 Build React App
        if: ${{ inputs.app_type == 'react' }}
        working-directory: edge-apps/${{ inputs.edge_app_name }}
        run: npm run build

      - name: ✨ Create Edge App
        if: ${{ inputs.app_type == 'html' }}
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app create --name="${{ inputs.edge_app_name }}" --in-place --path="${{ env.APP_PATH }}"

      - name: ✨ Create Edge App
        if: ${{ inputs.app_type == 'react' }}
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app create --name="${{ inputs.edge_app_name }}" --in-place --path=${{ env.APP_PATH }}/dist
        env:
          APP_PATH: edge-apps/${{ inputs.edge_app_name }}/dist

      - name: 🚀 Deploy HTML Edge App
        if: ${{ inputs.app_type == 'html' }}
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app deploy --path="${{ env.APP_PATH }}"

      - name: 🚀 Deploy React Edge App
        if: ${{ inputs.app_type == 'react' }}
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app deploy --path=${{ env.APP_PATH }}/dist
         env:
          APP_PATH: edge-apps/${{ inputs.edge_app_name }}/dist

      - name: 📋 Log manifest file
        run: |
          cat ${{ env.APP_PATH }}/${{ env.MANIFEST_FILE_NAME }}

      - name: 📄 Create Instance
        if: ${{ inputs.app_type == 'html' }}
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app instance create --path="${{ env.APP_PATH }}"

      - name: 📄 Create Instance
        if: ${{ inputs.app_type == 'react' }}
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app instance create --path=${{ env.APP_PATH }}/dist
         env:
          APP_PATH: edge-apps/${{ inputs.edge_app_name }}/dist


      - name: 🔄 Update Instance
        if: ${{ inputs.app_type == 'html' }}
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app instance update --path="${{ env.APP_PATH }}"

      - name: 🔄 Update Instance
        if: ${{ inputs.app_type == 'react' }}
        uses: screenly/cli@master
        with:
          screenly_api_token: ${{ env.SCREENLY_API_TOKEN }}
          cli_commands: edge-app instance update --path=${{ env.APP_PATH }}/dist
         env:
          APP_PATH: edge-apps/${{ inputs.edge_app_name }}/dist

      - name: 📋 Log instance.yml
        if: ${{ inputs.app_type == 'html' }}
        run: |
          cat ${{ env.APP_PATH }}/instance.yml

      - name: 📋 Log instance.yml
        if: ${{ inputs.app_type == 'react' }}
        run: |
          cat ${{ env.APP_PATH }}/dist/instance.yml
         env:
          APP_PATH: edge-apps/${{ inputs.edge_app_name }}/dist