var E=Object.create;var p=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var $=(o,t)=>{for(var a in t)p(o,a,{get:t[a],enumerable:!0})},y=(o,t,a,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of M(t))!k.call(o,e)&&e!==a&&p(o,e,{get:()=>t[e],enumerable:!(n=F(t,e))||n.enumerable});return o};var C=(o,t,a)=>(a=o!=null?E(h(o)):{},y(t||!o||!o.__esModule?p(a,"default",{value:o,enumerable:!0}):a,o)),P=o=>y(p({},"__esModule",{value:!0}),o);var O={};$(O,{compressBaseData:()=>l,encodeData:()=>w,getRawCityCountryList:()=>L,transformCountryListIso2ToCodeLookupMap:()=>A});module.exports=P(O);var s=require("fs"),c=require("path"),D=require("csv-parse"),g=C(require("lz-ts"),1),I=C(require("s2-geometry"),1),B=require("url"),b=require("path"),j={},{compressToURI:v}=g.default,{S2:N}=I.default,U=(0,B.fileURLToPath)(j.url),u=(0,b.dirname)(U),i=(0,D.parse)({delimiter:",",quote:'"'}),A=o=>{let t={};return o.forEach((a,n)=>{t[a[0]]={code:a[0],name:a[1],index:n}}),t},L=async(o,t,a=15e3)=>new Promise(n=>{let e=[];i.on("readable",function(){let r;for(;(r=i.read())!==null;){let[m,,T,x,,R,,,S,_]=r,d=parseFloat(T),f=parseFloat(x);(parseInt(_)>=a||S)&&d&&f&&e.push([N.latLngToKey(d,f,8),m,o[R].index])}}),i.on("end",async()=>{e.sort((r,m)=>r[2]-m[2]),n(e)}),i.write(t),i.end()}),w=o=>{let t="",a=null;return o.forEach((n,e)=>{let r=o[e+1];t+=`${n[0]}${n[1]}
`,r&&r[2]&&(a===null||r&&r[2]!==a)&&(t+=`${r[2]}
`,a=r[2])}),t},l=o=>v(w(o));(async()=>{let o=JSON.parse((0,s.readFileSync)((0,c.resolve)(u,"../data/countriesIso2.json"),{encoding:"utf8"})).map(a=>[a.code,a.name]);(0,s.writeFileSync)((0,c.resolve)(u,"../src/gen/baseDataCountries.ts"),`
    export const BASE_DATA_COUNTRIES = \`${l(o)}\`;
    `);let t=await L(A(o),(0,s.readFileSync)((0,c.resolve)(u,"../data/worldcities.csv"),{encoding:"utf8"}));(0,s.writeFileSync)((0,c.resolve)(u,"../src/gen/baseDataCities.ts"),`
    export const BASE_DATA_CITIES = \`${l(t)}\`;
    `)})();0&&(module.exports={compressBaseData,encodeData,getRawCityCountryList,transformCountryListIso2ToCodeLookupMap});
//# sourceMappingURL=codegen.cjs.js.map
